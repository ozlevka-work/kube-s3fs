apiVersion: v1
kind: PersistentVolume
metadata:
  name: s3-driver-pv
spec:
  capacity:
    storage: 1200Gi # ignored, required
  accessModes:
    - ReadWriteMany # supported options: ReadWriteMany / ReadOnlyMany
  mountOptions:
    - allow-delete
    - region us-iad-1
    - uid 1001
    - gid 1000
    - dir-mode 0777
    - endpoint-url https://us-iad-1.linodeobjects.com
  csi:
    driver: s3.csi.aws.com # required
    volumeHandle: s3-csi-driver-volume # must be unique
    volumeAttributes:
      bucketName: levdev-event-test
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: s3-driver-claim
  namespace: argocd
spec:
  accessModes:
    - ReadWriteMany # supported options: ReadWriteMany / ReadOnlyMany
  storageClassName: "" # required for static provisioning
  resources:
    requests:
      storage: 1200Gi # ignored, required
  volumeName: s3-driver-pv
---
apiVersion: v1
kind: Secret
metadata:
  name: sftp-secret
  namespace: argocd
type: Opaque
data:
  username: Zm9v
  password: cGFzcw==
---
apiVersion: v1
kind: Service
metadata:
  name: sftp-service
  namespace: argocd
spec:
  selector:
    app: sftp-server
  ports:
    - protocol: TCP
      port: 22
      targetPort: 22
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sftp-deployment
  namespace: argocd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sftp-server
  template:
    metadata:
      labels:
        app: sftp-server
    spec:
      containers:
        - name: sftp-server
          image: ghcr.io/ozlevka-work/sftp:v0.1.0-amd
          command: 
          - /bin/bash
          - -c
          - "/entrypoint $USERNAME:$PASSWORD:1001:1001"
          env:
            - name: USERNAME
              valueFrom:
                secretKeyRef:
                  name: sftp-secret
                  key: username
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sftp-secret
                  key: password
          volumeMounts:
            - mountPath: /home/foo/dir
              name: test
      volumes:
        - name: test
          persistentVolumeClaim:
            claimName: s3-driver-claim
            readOnly: false
# ---
# apiVersion: argoproj.io/v1alpha1
# kind: EventSource
# metadata:
#   name: test-source-file
#   namespace: argocd
# spec:
#   eventBusName: argo-events-default-bus
#   template:
#     container:
#       volumeMounts:
#         - mountPath: /s3/bucket
#           name: test
#     volumes:
#     - name: test
#       persistentVolumeClaim:
#         claimName: s3-driver-claim
#         readOnly: true
#   file:
#     test:
#       polling: true
#       watchPathConfig:
#         directory: /s3/bucket/
#         pathRegexp:  "([a-z]+).txt"
#       eventType: "CREATE"
        